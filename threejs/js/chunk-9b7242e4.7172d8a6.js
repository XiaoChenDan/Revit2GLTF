(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-9b7242e4"],{9485:function(e,t,a){"use strict";a.r(t);var n=a("f2bf"),o=a("d009"),c=a("c40d");const l={id:"treeData"};var s=Object(n["defineComponent"])({setup(e){const t={children:"children",label:"label"},a=Object(n["ref"])(434),s=Object(n["ref"])();c["a"].treeHeight=a,c["a"].modelTree=s;const d=(e,t)=>{let a=s.value.getCheckedKeys();if(0==a.length){for(const e of o["a"].scene.mapModels.values())for(const t of e.allElementData.values())t.show=!1;return void o["a"].scene.enableRender()}let n=new Set;for(const o of a)n.add(o);for(const c of o["a"].scene.mapModels.values())for(const e of c.allElementData.values())n.has(e.id)?e.show=!0:e.show=!1;o["a"].scene.enableRender()},r=e=>{null==e.children||e.children.length};return(e,o)=>{const f=Object(n["resolveComponent"])("el-tree-v2");return Object(n["openBlock"])(),Object(n["createElementBlock"])("div",l,[Object(n["createVNode"])(f,{ref:(e,t)=>{t["modelTree"]=e,s.value=e},height:a.value,data:Object(n["unref"])(c["a"]).ModelData.value,props:t,onNodeClick:r,onCheckChange:d,"node-key":"id","show-checkbox":"","default-expanded-keys":[0],"default-checked-keys":Object(n["unref"])(c["a"]).SpaceTreeCheckIDs.value},null,8,["height","data","default-checked-keys"])])}}});a("eaa4");const d=s;t["default"]=d},eaa4:function(e,t,a){"use strict";a("ef6a")},ef6a:function(e,t,a){}}]);